use northwind

db.categories.insertOne({name: "Condiments"})

db.categories.find()

use sample_mflix

db.movies.find({year:2000}).count()

use upc

db.students.insertOne({last_name: "Castillo", first_mame: "Carlos", courses: ["IHC", "Redes", "Diseño de base de datos"]})
db.students.insertOne({last_name: "Campos", first_name: "Juana",
    courses: [{code: "SI393", name: "IHC" }, {code: "SI400", name: "Diseño de base de datos"} ]})


db.students.find()



use airbnb

// Crear un regla de validacion para un alojamiento
// nombre                       --> obligatorio
// usuario (nombre, apellido)   --> obligatorio
// direcccion (ciudad, pais)    --> obligatorio
// valoracion
// servicios

db.createCollection("alojamientos", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            title: "Esquema de valiación para los documentos de la colección alojamientos",
            required: ["nombre", "direccion", "usuario"],
            properties: {
                nombre: {
                    bsonType: "string"
                }
            }
        }
    }
})

db.alojamientos.insertOne({nombre: 15, direccion: "Brazil", usuario: "Alejandro Dumas"})


use airbnb

-- Campos
-- titulo: "string"
-- ubicacion: documento ("object")
				-- ciudad
				-- departamento
				-- pais
-- anfitrion: "string"
-- precio: "double"
-- servicios: "array"
				"strings"
-- comentarios: "array"
					documento ("object")
					-- usuario: "string"
					-- valoracion: "int"
					-- comentario: "string"


db.createCollection("alojamientos", {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			description: "Documento que representa un alojamiento",
			required: ["titulo", "anfitrion", "ubicacion", "servicios"],
			properties: {
				titulo: {
					bsonType: "string",
					description: "El título es obligatorio y es de tipo string"
				},
				anfitrion: {
					bsonType: "string",
				},
				ubicacion: {
					bsonType: "object",
					required: ["ciudad", "departamento", "pais"],
					properties: {
						ciudad: {
							bsonType: "string"
						}
					}
				},
				servicios: {
					bsonType: "array",
					minItems: 1,
					uniqueItems: true,
					items: {
						bsonType: "string"
					}
				}
			}

		}
	}

})
